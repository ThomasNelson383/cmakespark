image: Visual Studio 2017

platform: 
  - x64

configuration: 
  - Debug
  - Release

environment:
  QT_VERSION: 5.9
  QT_COMPILED: msvc2017
  matrix:
  - SHARED: ON
  - SHARED: OFF

install:
  ############################################################################
  # Install Ninja
  ############################################################################
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.6.0/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

  ############################################################################
  # set correct QTDIR in the PATH environment variable
  ############################################################################
  - set VS_FULL=%VS_VERSION% Win64
  - set QTDIR=C:/Qt/%QT_VERSION%/%QT_COMPILED%_64
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64
  - set PATH=%PATH%;%QTDIR%/bin

build_script:
# Clone examples: they are the code to test against.
  - git clone https://github.com/frederikvannoote/cmake-common-examples.git %HOMEPATH%/examples
  - set CMAKE_COMMON=%APPVEYOR_BUILD_FOLDER%
  - mkdir %TEMP%\installed

test_script:
  # Build and install simplelib
  - mkdir %TEMP%\simplelib-build
  - cd %TEMP%\simplelib-build
  - cmake -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_INSTALL_PREFIX=%TEMP%/installed -G Ninja %HOMEPATH%/examples/simplelib
  - cmake --build . --config %configuration% --target all
  - cmake --build . --config %configuration% --target install
  - cmake --build . --config %configuration% --target sdk

  # Relocate library
  - xcopy /E %TEMP%\installed %TEMP%\relocated\
 
  # Build and install Simpleapp
  - mkdir %TEMP%\simpleapp-build
  - cd %TEMP%\simpleapp-build
  - cmake -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_INSTALL_PREFIX=%TEMP%/installed -DCC1simplelib_DIR=%TEMP%/relocated/lib/cmake/CC1simplelib -G Ninja %HOMEPATH%/examples/simpleapp
  - cmake --build . --config %configuration% --target all
  - cmake --build . --config %configuration% --target install

  # Build and install QSimpleApp
  - mkdir %TEMP%\QSimpleApp-build
  - cd %TEMP%\QSimpleApp-build
  - cmake -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_INSTALL_PREFIX=%TEMP%/installed -DCC1simplelib_DIR=%TEMP%/relocated/lib/cmake/CC1simplelib -G Ninja %HOMEPATH%/examples/QSimpleApp/
  - cmake --build . --config %configuration% --target all
  - cmake --build . --config %configuration% --target install

  # Build and install complex lib
  - mkdir %TEMP%\complexlib-build
  - cd %TEMP%\complexlib-build
  - cmake -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_INSTALL_PREFIX=%TEMP%/installed -G Ninja %HOMEPATH%/examples/complexlib
  - cmake --build . --config %configuration% --target all
  - cmake --build . --config %configuration% --target install
  - cmake --build . --config %configuration% --target sdk

# uncomment following lines to be able to debug the appveyor image through RDP protocol when build finished
# https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
# on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

